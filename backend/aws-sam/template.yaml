AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: PhishGuard Lite Backend API

Parameters:
  S3BucketName:
    Type: String
    Default: phishguard-reports
    Description: Name for the S3 bucket to store phishing reports

Resources:
  # IAM Role for Lambda function
  PhishGuardFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::phishguard-reports-1755667751/*'
                  - !Sub 'arn:aws:s3:::phishguard-reports-1755667751'

  # API Gateway
  PhishGuardApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  # Lambda function for the API
  PhishGuardFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../
      Handler: app.lambda_handler
      Runtime: python3.11
      Timeout: 30
      MemorySize: 512
      Environment:
        Variables:
          S3_BUCKET: phishguard-reports-1755667751
      Role: !GetAtt PhishGuardFunctionRole.Arn
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PhishGuardApi
            Path: /{proxy+}
            Method: ANY

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for PhishGuard Lite"
    Value: !Sub "https://${PhishGuardApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  LambdaFunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt PhishGuardFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunctionArn"
